openapi: 3.0.0
info:
  title: API de Gestión de Alojamientos
  version: 1.0.0
  description: API para usuarios, anfitriones, alojamientos, reservas y comentarios. Rutas y respuestas basadas en los requerimientos del proyecto.
servers:
  - url: http://localhost:8080
paths:
  /usuarios:
    post:
      tags:
        - Usuarios
      summary: Registrar un nuevo usuario
      description: Crea un nuevo usuario en el sistema. Este endpoint es público y no requiere autenticación.
      operationId: registrarUsuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroUsuario'
            examples:
              ejemploRegistro:
                summary: Ejemplo de registro de usuario
                value:
                  nombre: "Juan Pérez"
                  email: "juan.perez@example.com"
                  contrasenia: "Password123!"
                  telefono: "+573001112233"
      responses:
        '201':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponse'
              examples:
                ejemploExito:
                  summary: Usuario creado exitosamente
                  value:
                    error: false
                    mensaje: "Usuario creado exitosamente"
                    data:
                      id: "64f2b33a7c6b1a5b8a12f3c4"
                      nombre: "Juan Pérez"
                      email: "juan.perez@example.com"
                      activo: true
                      rol: "USUARIO"
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ejemploError400:
                  summary: Error de validación
                  value:
                    error: true
                    mensaje: "El campo email es obligatorio"
                    data: null
        '409':
          description: Correo ya registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ejemploError409:
                  summary: Email en uso
                  value:
                    error: true
                    mensaje: "El correo ya está en uso"
                    data: null
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Servicio no disponible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /login:
    post:
      tags:
        - Autenticación
      summary: Iniciar sesión de usuario
      description: Permite que un usuario inicie sesión proporcionando sus credenciales. Devuelve un mensaje de éxito o error según la validación.
      operationId: iniciarSesion
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Nombre de usuario o correo electrónico
                password:
                  type: string
                  format: password
                  description: Contraseña del usuario
            examples:
              ejemploLogin:
                summary: Ejemplo de inicio de sesión
                value:
                  username: "juan.perez@example.com"
                  password: "Password123!"
      responses:
        '200':
          description: Usuario autenticado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaResponse'
              examples:
                ejemploExito:
                  summary: Ejemplo de respuesta exitosa
                  value:
                    error: false
                    mensaje: "Usuario autenticado correctamente: juan.perez@example.com"
                    data: null
        '400':
          description: Credenciales incompletas o formato inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ejemploError400:
                  summary: Faltan campos requeridos
                  value:
                    error: true
                    mensaje: "Debe proporcionar el nombre de usuario y la contraseña"
                    data: null
        '401':
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ejemploError401:
                  summary: Usuario o contraseña inválidos
                  value:
                    error: true
                    mensaje: "Credenciales incorrectas"
                    data: null
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /usuarios/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID del usuario
    get:
      summary: Obtener perfil de usuario
      operationId: obtenerUsuario
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Perfil del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Prohibido (sin permisos)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Editar perfil de usuario
      operationId: editarUsuario
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioEdicion'
      responses:
        '200':
          description: Perfil actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponse'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Prohibido (editar otro usuario)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/recuperar:
    post:
      summary: Solicitar código de recuperación por email
      operationId: solicitarRecuperacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecuperarContraseniaRequest'
      responses:
        '200':
          description: Código enviado al email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Email inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/restablecer:
    post:
      summary: Restablecer contraseña con código
      operationId: restablecerContrasenia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestablecerContraseniaRequest'
      responses:
        '200':
          description: Contraseña restablecida correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Código inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /alojamientos:
    post:
      tags:
        - Alojamientos
      summary: Crear nuevo alojamiento (solo anfitrión)
      description: Permite que un usuario con rol **anfitrión** cree un nuevo alojamiento. Requiere autenticación con token Bearer.
      operationId: crearAlojamiento
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlojamientoCrear'
            examples:
              ejemploCrear:
                summary: Ejemplo de creación
                value:
                  titulo: "Casa en la playa"
                  descripcion: "Hermosa casa frente al mar con piscina privada"
                  ciudad: "Cartagena"
                  precioPorNoche: 350000
                  capacidad: 6
                  servicios: [ "wifi", "aire acondicionado", "piscina" ]
      responses:
        '201':
          description: Alojamiento creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlojamientoResponse'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Usuario no es anfitrión
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflicto de negocio (por ejemplo, límite de imágenes)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      tags:
        - Alojamientos
      summary: Buscar alojamientos (filtros y paginación)
      description: Permite buscar alojamientos públicos con filtros opcionales como ciudad, fechas o rango de precios.
      operationId: buscarAlojamientos
      parameters:
        - name: ciudad
          in: query
          schema:
            type: string
        - name: fechaInicio
          in: query
          schema:
            type: string
            format: date
        - name: fechaFin
          in: query
          schema:
            type: string
            format: date
        - name: precioMin
          in: query
          schema:
            type: number
        - name: precioMax
          in: query
          schema:
            type: number
        - name: servicios
          in: query
          schema:
            type: string
          description: Lista separada por comas (ej. wifi,piscina)
        - name: pagina
          in: query
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Lista paginada de alojamientos
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  pagina:
                    type: integer
                  size:
                    type: integer
                  resultados:
                    type: array
                    items:
                      $ref: '#/components/schemas/AlojamientoResponse'
        '400':
          description: Filtros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /alojamientos/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID del alojamiento
    get:
      tags:
        - Alojamientos
      summary: Ver detalle completo de un alojamiento
      operationId: verAlojamiento
      responses:
        '200':
          description: Detalle del alojamiento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlojamientoResponse'
        '404':
          description: Alojamiento no encontrado o eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Alojamientos
      summary: Editar alojamiento (solo anfitrión propietario)
      operationId: editarAlojamiento
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlojamientoEditar'
      responses:
        '200':
          description: Alojamiento actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlojamientoResponse'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: No es el propietario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No existe el alojamiento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Alojamientos
      summary: Eliminar alojamiento (soft delete)
      description: Solo se puede eliminar si no tiene reservas futuras.
      operationId: eliminarAlojamiento
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Alojamiento marcado como eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '403':
          description: Tiene reservas futuras o no es propietario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No existe el alojamiento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usuarios/{id}/alojamientos:
    get:
      tags:
        - Usuarios
      summary: Listar alojamientos de un anfitrión
      description: Devuelve todos los alojamientos creados por un usuario anfitrión. Requiere autenticación.
      operationId: listarAlojamientosAnfitrion
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de alojamientos del anfitrión
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlojamientoResponse'
        '403':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /alojamientos/{id}/metricas:
    get:
      tags:
        - Alojamientos
      summary: Obtener métricas básicas de un alojamiento
      description: Devuelve métricas como número de reservas y calificación promedio en un rango de fechas.
      operationId: metricasAlojamiento
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: fechaInicio
          in: query
          schema:
            type: string
            format: date
        - name: fechaFin
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Métricas del alojamiento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricasResponse'
        '400':
          description: Rango de fechas inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Alojamiento no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  paths:
    /reservas:
      post:
        summary: Crear una nueva reserva (usuario autenticado)
        operationId: crearReserva
        security:
          - BearerAuth: [ ]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservaCrear'
        responses:
          '201':
            description: Reserva creada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReservaResponse'
          '400':
            description: Datos inválidos (fechas, formato)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: No autorizado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '409':
            description: Conflicto (fechas ocupadas o capacidad excedida)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

      get:
        summary: Listar reservas (filtros) — uso administrativo / host
        operationId: listarReservas
        security:
          - BearerAuth: [ ]
        parameters:
          - name: usuarioId
            in: query
            schema:
              type: string
          - name: alojamientoId
            in: query
            schema:
              type: string
          - name: estado
            in: query
            schema:
              type: string
              enum: [ PENDIENTE, CONFIRMADA, CANCELADA, COMPLETADA ]
          - name: fechaInicio
            in: query
            schema:
              type: string
              format: date
          - name: fechaFin
            in: query
            schema:
              type: string
              format: date
          - name: pagina
            in: query
            schema:
              type: integer
              default: 1
        responses:
          '200':
            description: Lista de reservas
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaginacionResponse'
          '400':
            description: Filtros inválidos
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /reservas/{id}:
      get:
        summary: Obtener detalles de una reserva específica
        operationId: obtenerReserva
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Detalles de la reserva
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReservaResponse'
          '403':
            description: No autorizado para ver esta reserva
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Reserva no encontrada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

      put:
        summary: Actualizar una reserva (anfitrión - fechas o estado)
        operationId: actualizarReserva
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservaActualizar'
        responses:
          '200':
            description: Reserva actualizada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReservaResponse'
          '400':
            description: Datos inválidos
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description: No autorizado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Reserva no encontrada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /reservas/{id}/cancelar:
      put:
        summary: Cancelar una reserva (usuario) — validar plazo 48h
        operationId: cancelarReserva
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Reserva cancelada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuccessResponse'
          '400':
            description: Cancelación no permitida (fuera de plazo)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Reserva no encontrada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /reservas/{id}/confirmar:
      put:
        summary: Confirmar una reserva (anfitrión)
        operationId: confirmarReserva
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Reserva confirmada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuccessResponse'
          '403':
            description: No autorizado (no es el anfitrión)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Reserva no encontrada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /usuarios/{id}/reservas:
      get:
        summary: Ver historial de reservas de un usuario
        operationId: historialReservasUsuario
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: estado
            in: query
            schema:
              type: string
              enum: [ ACTIVA, PASADA, CANCELADA, CONFIRMADA, COMPLETADA ]
          - name: fechaInicio
            in: query
            schema:
              type: string
              format: date
          - name: fechaFin
            in: query
            schema:
              type: string
              format: date
        responses:
          '200':
            description: Lista del historial de reservas
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ReservaResponse'
          '403':
            description: No autorizado para ver el historial
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Usuario no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /reservas/{id}/comentarios:
      post:
        summary: Crear comentario (reseña) asociado a una reserva completada
        operationId: crearComentario
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComentarioCrear'
        responses:
          '201':
            description: Comentario creado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ComentarioResponse'
          '400':
            description: Datos inválidos
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description: Reserva no completada o no corresponde al usuario
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '409':
            description: Ya existe un comentario para esta reserva
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /comentarios/{id}:
      get:
        summary: Obtener un comentario específico con su respuesta
        operationId: obtenerComentario
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Comentario encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ComentarioCompletoResponse'
          '404':
            description: Comentario no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

      delete:
        summary: Eliminar un comentario (usuario o admin)
        operationId: eliminarComentario
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Comentario eliminado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuccessResponse'
          '403':
            description: No autorizado para eliminar este comentario
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Comentario no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /comentarios/{id}/respuesta:
      post:
        summary: Responder un comentario (anfitrión)
        operationId: responderComentario
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaCrear'
        responses:
          '201':
            description: Respuesta creada
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RespuestaResponse'
          '400':
            description: Datos inválidos
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description: No es anfitrión o no es propietario del alojamiento
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Comentario no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /alojamientos/{id}/comentarios:
      get:
        summary: Listar comentarios de un alojamiento
        operationId: listarComentariosAlojamiento
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: orden
            in: query
            schema:
              type: string
              enum: [ ASC, DESC ]
              default: DESC
          - name: limite
            in: query
            schema:
              type: integer
              default: 10
        responses:
          '200':
            description: Lista de comentarios ordenados
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ComentarioCompletoResponse'
          '404':
            description: Alojamiento no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /alojamientos/{id}/disponibilidad:
      get:
        summary: Verificar disponibilidad de fechas para un alojamiento
        operationId: verificarDisponibilidad
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: checkIn
            in: query
            required: true
            schema:
              type: string
              format: date
          - name: checkOut
            in: query
            required: true
            schema:
              type: string
              format: date
          - name: huespedes
            in: query
            schema:
              type: integer
              default: 1
        responses:
          '200':
            description: Disponibilidad verificada
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    disponible:
                      type: boolean
                    mensaje:
                      type: string
                    precioTotal:
                      type: number
          '404':
            description: Alojamiento no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    /alojamientos/{id}/reservas:
      get:
        summary: Ver reservas de un alojamiento (anfitrión)
        operationId: reservasPorAlojamiento
        security:
          - BearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: estado
            in: query
            schema:
              type: string
              enum: [ PENDIENTE, CONFIRMADA, CANCELADA, COMPLETADA ]
          - name: fechaInicio
            in: query
            schema:
              type: string
              format: date
          - name: fechaFin
            in: query
            schema:
              type: string
              format: date
        responses:
          '200':
            description: Lista de reservas del alojamiento
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ReservaResponse'
          '403':
            description: No autorizado (no es el anfitrión)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Alojamiento no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

components:
    securitySchemes:
      BearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT

    schemas:
      # -- Usuarios / Auth --
      RegistroUsuario:
        type: object
        required:
          - nombre
          - email
          - contrasenia
          - telefono
          - fechaNacimiento
        properties:
          nombre:
            type: string
            example: "Carlos Pérez"
          email:
            type: string
            format: email
            example: "carlos@email.com"
          contrasenia:
            type: string
            example: "ContraseñaSegura1"
          telefono:
            type: string
            example: "3001234567"
          rol:
            type: string
            enum: [ USUARIO, ANFITRION, ADMIN ]
            example: "USUARIO"
          fechaNacimiento:
            type: string
            format: date
            example: "1990-10-10"

      UsuarioResponse:
        type: object
        properties:
          id:
            type: string
            example: "u_123456"
          nombre:
            type: string
            example: "Carlos Pérez"
          email:
            type: string
            format: email
          telefono:
            type: string
          rol:
            type: string
          fechaNacimiento:
            type: string
            format: date

      UsuarioEdicion:
        type: object
        properties:
          nombre:
            type: string
          telefono:
            type: string
          fotoPerfilUrl:
            type: string
          descripcion:
            type: string

      AuthRequest:
        type: object
        required:
          - email
          - contrasenia
        properties:
          email:
            type: string
            format: email
          contrasenia:
            type: string

      AuthResponse:
        type: object
        properties:
          token:
            type: string
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          tipo:
            type: string
            example: "Bearer"
          expiracion:
            type: integer
            description: Expiración en segundos

      RecuperarContraseniaRequest:
        type: object
        required:
          - email
        properties:
          email:
            type: string
            format: email

      RestablecerContraseniaRequest:
        type: object
        required:
          - email
          - codigo
          - nuevaContrasenia
        properties:
          email:
            type: string
            format: email
          codigo:
            type: string
            example: "123456"
          nuevaContrasenia:
            type: string
            example: "NuevaPass1"

      SuccessResponse:
        type: object
        properties:
          mensaje:
            type: string
            example: "Operación exitosa"

      ErrorResponse:
        type: object
        properties:
          codigo:
            type: string
            example: "ERR_VALIDACION"
          mensaje:
            type: string
            example: "El email ya está registrado"

      # -- Alojamiento --
      AlojamientoCrear:
        type: object
        required:
          - titulo
          - descripcion
          - ubicacion
          - precioPorNoche
          - capacidad
        properties:
          titulo:
            type: string
            example: "Casa en la playa"
          descripcion:
            type: string
          ubicacion:
            type: object
            required: [ ciudad, direccion ]
            properties:
              ciudad:
                type: string
              direccion:
                type: string
              lat:
                type: number
              lng:
                type: number
          precioPorNoche:
            type: number
          capacidad:
            type: integer
          servicios:
            type: array
            items:
              type: string
              example: "wifi"
          imagenes:
            type: array
            items:
              type: string
              example: "/img1.jpg"

      AlojamientoEditar:
        type: object
        properties:
          titulo:
            type: string
          descripcion:
            type: string
          precioPorNoche:
            type: number
          capacidad:
            type: integer
          servicios:
            type: array
            items:
              type: string

      AlojamientoResponse:
        type: object
        properties:
          id:
            type: string
            example: "a_98765"
          anfitrionId:
            type: string
          titulo:
            type: string
          descripcion:
            type: string
          ubicacion:
            type: object
            properties:
              ciudad: { type: string }
              direccion: { type: string }
              lat: { type: number }
              lng: { type: number }
          precioPorNoche:
            type: number
          capacidad:
            type: integer
          servicios:
            type: array
            items:
              type: string
          imagenes:
            type: array
            items:
              type: string
          calificacionPromedio:
            type: number
            format: float
          estado:
            type: string
            enum: [ ACTIVO, ELIMINADO, BORRADOR ]

      MetricasResponse:
        type: object
        properties:
          reservasTotales:
            type: integer
            example: 15
          calificacionPromedio:
            type: number
            format: float
            example: 4.7

      # -- Reservas --
      ReservaCrear:
        type: object
        required:
          - alojamientoId
          - checkIn
          - checkOut
          - huespedes
        properties:
          alojamientoId:
            type: string
          checkIn:
            type: string
            format: date
          checkOut:
            type: string
            format: date
          huespedes:
            type: integer

      ReservaActualizar:
        type: object
        properties:
          checkIn:
            type: string
            format: date
          checkOut:
            type: string
            format: date
          huespedes:
            type: integer
          estado:
            type: string
            enum: [ PENDIENTE, CONFIRMADA, CANCELADA, COMPLETADA ]

      ReservaResponse:
        type: object
        properties:
          id:
            type: string
          alojamientoId:
            type: string
          usuarioId:
            type: string
          checkIn:
            type: string
            format: date
          checkOut:
            type: string
            format: date
          huespedes:
            type: integer
          estado:
            type: string
            enum: [ PENDIENTE, CONFIRMADA, CANCELADA, COMPLETADA ]
          precioTotal:
            type: number


      ComentarioCrear:
        type: object
        required:
          - calificacion
        properties:
          calificacion:
            type: integer
            minimum: 1
            maximum: 5
          comentario:
            type: string
            maxLength: 500

      ComentarioResponse:
        type: object
        properties:
          id:
            type: string
          reservaId:
            type: string
          usuarioId:
            type: string
          calificacion:
            type: integer
          comentario:
            type: string
          creadoEn:
            type: string
            format: date-time

      ComentarioCompletoResponse:
        type: object
        properties:
          id:
            type: string
          reservaId:
            type: string
          usuarioId:
            type: string
          calificacion:
            type: integer
          comentario:
            type: string
          creadoEn:
            type: string
            format: date-time
          respuesta:
            $ref: '#/components/schemas/RespuestaResponse'

      RespuestaCrear:
        type: object
        required:
          - mensaje
        properties:
          mensaje:
            type: string
            maxLength: 500

      RespuestaResponse:
        type: object
        properties:
          id:
            type: string
          comentarioId:
            type: string
          anfitrionId:
            type: string
          mensaje:
            type: string
          creadoEn:
            type: string
            format: date-time


      PaginacionResponse:
        type: object
        properties:
          datos:
            type: array
            items: { }
          paginaActual:
            type: integer
          totalPaginas:
            type: integer
          totalElementos:
            type: integer
          tieneSiguiente:
            type: boolean
          tieneAnterior:
            type: boolean