package application.services.impl;

import application.dto.email.EmailDTO;
import application.model.Reserva;
import application.model.Usuario;
import application.services.email.EmailService;
import lombok.RequiredArgsConstructor;
import org.simplejavamail.api.mailer.Mailer;
import org.simplejavamail.email.EmailBuilder;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class EmailServiceImpl implements EmailService {

    private final Mailer mailer;

    private static final String REMITENTE_NOMBRE = "Plataforma de Reservas";
    private static final String REMITENTE_EMAIL = "noreply@miplataforma.com";

    @Override
    public void enviarConfirmacionReserva(Reserva reserva) {
        String asunto = "‚úÖ Confirmaci√≥n de Reserva - " + reserva.getAlojamiento().getNombre();
        String contenido = construirContenidoConfirmacionReserva(reserva);

        enviarEmail(
                reserva.getUsuario().getEmail(),
                reserva.getUsuario().getNombre(),
                asunto,
                contenido
        );
    }

    @Override
    public void enviarNotificacionNuevaReservaAnfitrion(Reserva reserva) {
        Usuario anfitrion = reserva.getAlojamiento().getAnfitrion();
        String asunto = "üìÖ Nueva Reserva Recibida - " + reserva.getAlojamiento().getNombre();
        String contenido = construirContenidoNuevaReservaAnfitrion(reserva);

        enviarEmail(
                anfitrion.getEmail(),
                anfitrion.getNombre(),
                asunto,
                contenido
        );
    }

    @Override
    public void enviarNotificacionCancelacionUsuario(Reserva reserva) {
        String asunto = "‚ùå Reserva Cancelada - " + reserva.getAlojamiento().getNombre();
        String contenido = construirContenidoCancelacionUsuario(reserva);

        enviarEmail(
                reserva.getUsuario().getEmail(),
                reserva.getUsuario().getNombre(),
                asunto,
                contenido
        );
    }

    public void sendMail(String destinatarioEmail, String asunto, String contenido) {
        EmailDTO emailDTO = new EmailDTO(destinatarioEmail, asunto, contenido);
        enviarEmail(emailDTO.recipient(), emailDTO.subject(), emailDTO.body());
    }


    @Override
    public void enviarNotificacionCancelacionAnfitrion(Reserva reserva) {
        Usuario anfitrion = reserva.getAlojamiento().getAnfitrion();
        String asunto = "‚ùå Reserva Cancelada - " + reserva.getAlojamiento().getNombre();
        String contenido = construirContenidoCancelacionAnfitrion(reserva);

        enviarEmail(
                anfitrion.getEmail(),
                anfitrion.getNombre(),
                asunto,
                contenido
        );
    }

    @Override
    public void enviarNotificacionAprobacionReserva(Reserva reserva) {
        String asunto = "‚úÖ Reserva Aprobada - " + reserva.getAlojamiento().getNombre();
        String contenido = construirContenidoAprobacionReserva(reserva);

        enviarEmail(
                reserva.getUsuario().getEmail(),
                reserva.getUsuario().getNombre(),
                asunto,
                contenido
        );
    }

    @Override
    public void enviarNotificacionRechazoReserva(Reserva reserva) {
        String asunto = "‚ùå Reserva Rechazada - " + reserva.getAlojamiento().getNombre();
        String contenido = construirContenidoRechazoReserva(reserva);

        enviarEmail(
                reserva.getUsuario().getEmail(),
                reserva.getUsuario().getNombre(),
                asunto,
                contenido
        );
    }

    @Override
    public void enviarRecordatorioCheckIn(Reserva reserva) {
        String asunto = "üîî Recordatorio Check-In - " + reserva.getAlojamiento().getNombre();
        String contenido = construirContenidoRecordatorioCheckIn(reserva);

        enviarEmail(
                reserva.getUsuario().getEmail(),
                reserva.getUsuario().getNombre(),
                asunto,
                contenido
        );
    }

    @Override
    public void enviarConfirmacionReservaUsuario(Reserva reserva) {
        enviarConfirmacionReserva(reserva); // Reutilizar
    }

    @Override
    public void enviarSolicitudComentario(Reserva reserva) {
        String asunto = "üí¨ Cu√©ntanos tu experiencia - " + reserva.getAlojamiento().getNombre();
        String contenido = construirContenidoSolicitudComentario(reserva);

        enviarEmail(
                reserva.getUsuario().getEmail(),
                reserva.getUsuario().getNombre(),
                asunto,
                contenido
        );
    }

    // ‚úÖ EMAIL GEN√âRICO CON SIMPLE JAVA MAIL
    @Override
    public void enviarEmail(String destinatario, String asunto, String contenido) {
        enviarEmail(destinatario, null, asunto, contenido);
    }

    // ‚úÖ M√âTODO PRINCIPAL DE ENV√çO
    private void enviarEmail(String destinatarioEmail, String destinatarioNombre, String asunto, String contenido) {
        try {
            var email = EmailBuilder.startingBlank()
                    .from(REMITENTE_NOMBRE, REMITENTE_EMAIL)
                    .to(destinatarioNombre != null ? destinatarioNombre : "Usuario", destinatarioEmail)
                    .withSubject(asunto)
                    .withPlainText(contenido)
                    .buildEmail();

            mailer.sendMail(email);
            System.out.println("üìß Email enviado a: " + destinatarioEmail);

        } catch (Exception e) {
            System.err.println("‚ùå Error enviando email a " + destinatarioEmail + ": " + e.getMessage());
            // No relanzar la excepci√≥n para no romper el flujo principal
        }
    }

    @Override
    public boolean validarEmail(String email) {
        if (email == null || email.trim().isEmpty()) {
            return false;
        }
        // Simple Java Mail tiene validaci√≥n integrada, pero hacemos una b√°sica
        String regex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$";
        return email.matches(regex);
    }

    @Override
    public void enviarReservaAprobada(Reserva reserva) {
        enviarNotificacionAprobacionReserva(reserva);
    }

    @Override
    public void enviarReservaRechazada(Reserva reserva) {
        enviarNotificacionRechazoReserva(reserva);
    }

    // üîß M√âTODOS PARA CONSTRUIR CONTENIDO (LOS MISMOS QUE ANTES)

    private String construirContenidoConfirmacionReserva(Reserva reserva) {
        return String.format("""
                        Hola %s,
                        
                        ¬°Tu reserva ha sido confirmada! üéâ
                        
                        üìã DETALLES DE TU RESERVA:
                        ‚Ä¢ Alojamiento: %s
                        ‚Ä¢ Direcci√≥n: %s
                        ‚Ä¢ Check-in: %s
                        ‚Ä¢ Check-out: %s
                        ‚Ä¢ Hu√©spedes: %d
                        ‚Ä¢ Estado: CONFIRMADA
                        
                        üí° Informaci√≥n importante:
                        - Presenta este correo al check-in
                        - El check-in es a partir de las 15:00
                        - El check-out es antes de las 11:00
                        
                        üìû Contacto del anfitri√≥n:
                        ‚Ä¢ Nombre: %s
                        ‚Ä¢ Email: %s
                        ‚Ä¢ Tel√©fono: %s
                        
                        ¬°Esperamos que tengas una estancia maravillosa!
                        
                        Saludos cordiales,
                        El equipo de la plataforma
                        """,
                reserva.getUsuario().getNombre(),
                reserva.getAlojamiento().getNombre(),
                reserva.getAlojamiento().getDireccion(),
                reserva.getCheckIn(),
                reserva.getCheckOut(),
                reserva.getNumeroHuespedes(),
                reserva.getAlojamiento().getAnfitrion().getNombre(),
                reserva.getAlojamiento().getAnfitrion().getEmail(),
                reserva.getAlojamiento().getAnfitrion().getTelefono() != null ?
                        reserva.getAlojamiento().getAnfitrion().getTelefono() : "No disponible"
        );
    }

    private String construirContenidoNuevaReservaAnfitrion(Reserva reserva) {
        return String.format("""
                        Hola %s,
                        
                        ¬°Tienes una nueva reserva! üéä
                        
                        üìã DETALLES DE LA RESERVA:
                        ‚Ä¢ Alojamiento: %s
                        ‚Ä¢ Hu√©sped: %s
                        ‚Ä¢ Email: %s
                        ‚Ä¢ Tel√©fono: %s
                        ‚Ä¢ Check-in: %s
                        ‚Ä¢ Check-out: %s
                        ‚Ä¢ Hu√©spedes: %d
                        ‚Ä¢ Estado: PENDIENTE
                        
                        ‚ö° Acci√≥n requerida:
                        Por favor, confirma o rechaza esta reserva en tu panel de anfitri√≥n.
                        
                        ¬°Gracias por ser parte de nuestra comunidad!
                        
                        Saludos cordiales,
                        El equipo de la plataforma
                        """,
                reserva.getAlojamiento().getAnfitrion().getNombre(),
                reserva.getAlojamiento().getNombre(),
                reserva.getUsuario().getNombre(),
                reserva.getUsuario().getEmail(),
                reserva.getUsuario().getTelefono() != null ?
                        reserva.getUsuario().getTelefono() : "No disponible",
                reserva.getCheckIn(),
                reserva.getCheckOut(),
                reserva.getNumeroHuespedes()
        );
    }

    private String construirContenidoCancelacionUsuario(Reserva reserva) {
        return String.format("""
                        Hola %s,
                        
                        Tu reserva ha sido cancelada.
                        
                        üìã RESERVA CANCELADA:
                        ‚Ä¢ Alojamiento: %s
                        ‚Ä¢ Fechas: %s a %s
                        ‚Ä¢ Hu√©spedes: %d
                        
                        üí∞ Reembolso:
                        - Si aplica reembolso, se procesar√° en 5-7 d√≠as h√°biles
                        - El monto se acreditar√° en tu m√©todo de pago original
                        
                        üòî Lamentamos cualquier inconveniente
                        Esperamos verte de nuevo pronto.
                        
                        Saludos cordiales,
                        El equipo de la plataforma
                        """,
                reserva.getUsuario().getNombre(),
                reserva.getAlojamiento().getNombre(),
                reserva.getCheckIn(),
                reserva.getCheckOut(),
                reserva.getNumeroHuespedes()
        );
    }

    private String construirContenidoCancelacionAnfitrion(Reserva reserva) {
        return String.format("""
                        Hola %s,
                        
                        Una reserva ha sido cancelada.
                        
                        üìã RESERVA CANCELADA:
                        ‚Ä¢ Alojamiento: %s
                        ‚Ä¢ Hu√©sped: %s
                        ‚Ä¢ Fechas: %s a %s
                        ‚Ä¢ Hu√©spedes: %d
                        
                        üìä Impacto en tus estad√≠sticas:
                        - Esta cancelaci√≥n afectar√° tu tasa de finalizaci√≥n
                        - Las cancelaciones frecuentes pueden afectar tu visibilidad
                        
                        üí° Recomendaci√≥n:
                        - Considera ajustar tu pol√≠tica de cancelaci√≥n
                        - Mant√©n tu calendario actualizado
                        
                        Saludos cordiales,
                        El equipo de la plataforma
                        """,
                reserva.getAlojamiento().getAnfitrion().getNombre(),
                reserva.getAlojamiento().getNombre(),
                reserva.getUsuario().getNombre(),
                reserva.getCheckIn(),
                reserva.getCheckOut(),
                reserva.getNumeroHuespedes()
        );
    }

    private String construirContenidoAprobacionReserva(Reserva reserva) {
        return String.format("""
                        Hola %s,
                        
                        ¬°Buena noticia! Tu reserva ha sido aprobada por el anfitri√≥n. ‚úÖ
                        
                        üìã DETALLES APROBADOS:
                        ‚Ä¢ Alojamiento: %s
                        ‚Ä¢ Direcci√≥n: %s
                        ‚Ä¢ Check-in: %s
                        ‚Ä¢ Check-out: %s
                        ‚Ä¢ Hu√©spedes: %d
                        
                        üóìÔ∏è Pr√≥ximos pasos:
                        1. Prep√°rate para tu viaje
                        2. Contacta al anfitri√≥n si necesitas informaci√≥n adicional
                        3. Presenta identificaci√≥n al check-in
                        
                        üìû Contacto del anfitri√≥n:
                        ‚Ä¢ %s
                        ‚Ä¢ %s
                        
                        ¬°Que tengas un excelente viaje!
                        
                        Saludos cordiales,
                        El equipo de la plataforma
                        """,
                reserva.getUsuario().getNombre(),
                reserva.getAlojamiento().getNombre(),
                reserva.getAlojamiento().getDireccion(),
                reserva.getCheckIn(),
                reserva.getCheckOut(),
                reserva.getNumeroHuespedes(),
                reserva.getAlojamiento().getAnfitrion().getNombre(),
                reserva.getAlojamiento().getAnfitrion().getEmail()
        );
    }

    private String construirContenidoRechazoReserva(Reserva reserva) {
        return String.format("""
                        Hola %s,
                        
                        Lamentamos informarte que tu reserva ha sido rechazada.
                        
                        üìã RESERVA RECHAZADA:
                        ‚Ä¢ Alojamiento: %s
                        ‚Ä¢ Fechas: %s a %s
                        
                        üîç Posibles razones:
                        - El alojamiento no est√° disponible en esas fechas
                        - El anfitri√≥n no puede aceptar la reserva
                        - Capacidad no disponible
                        
                        üí° Alternativas:
                        - Busca otros alojamientos similares
                        - Ajusta tus fechas de viaje
                        - Contacta al servicio al cliente si necesitas ayuda
                        
                        Lamentamos los inconvenientes y esperamos poder ayudarte a encontrar el alojamiento perfecto.
                        
                        Saludos cordiales,
                        El equipo de la plataforma
                        """,
                reserva.getUsuario().getNombre(),
                reserva.getAlojamiento().getNombre(),
                reserva.getCheckIn(),
                reserva.getCheckOut()
        );
    }

    private String construirContenidoRecordatorioCheckIn(Reserva reserva) {
        return String.format("""
                        Hola %s,
                        
                        ¬°Tu check-in est√° cerca! üéâ
                        
                        üìÖ Recordatorio de reserva:
                        ‚Ä¢ Alojamiento: %s
                        ‚Ä¢ Check-in: %s (ma√±ana)
                        ‚Ä¢ Check-out: %s
                        ‚Ä¢ Direcci√≥n: %s
                        
                        üéí Prep√°rate para tu viaje:
                        - Revisa las instrucciones de check-in
                        - Ten a mano tu identificaci√≥n
                        - Contacta al anfitri√≥n si llegas fuera del horario establecido
                        
                        üìû Contacto del anfitri√≥n:
                        ‚Ä¢ %s - %s
                        
                        ¬°Que tengas un viaje seguro y una estancia maravillosa!
                        
                        Saludos cordiales,
                        El equipo de la plataforma
                        """,
                reserva.getUsuario().getNombre(),
                reserva.getAlojamiento().getNombre(),
                reserva.getCheckIn(),
                reserva.getCheckOut(),
                reserva.getAlojamiento().getDireccion(),
                reserva.getAlojamiento().getAnfitrion().getNombre(),
                reserva.getAlojamiento().getAnfitrion().getEmail()
        );
    }

    private String construirContenidoSolicitudComentario(Reserva reserva) {
        return String.format("""
                        Hola %s,
                        
                        Esperamos que hayas tenido una estancia agradable en %s.
                        
                        Tu opini√≥n es muy importante para nosotros y para la comunidad de viajeros.
                        
                        üåü Por favor, comparte tu experiencia:
                        - Califica el alojamiento
                        - Escribe un comentario sobre tu estancia
                        - Ayuda a otros viajeros a tomar la mejor decisi√≥n
                        
                        ‚è±Ô∏è Solo te tomar√° 2 minutos y har√°s una gran diferencia.
                        
                        ¬°Gracias por ser parte de nuestra comunidad!
                        
                        Saludos cordiales,
                        El equipo de la plataforma
                        
                        PD: Las rese√±as honestas ayudan a mantener la calidad de nuestra plataforma.
                        """,
                reserva.getUsuario().getNombre(),
                reserva.getAlojamiento().getNombre()
        );
    }
}
