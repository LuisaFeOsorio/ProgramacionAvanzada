ResponseEntity--> El objeto ResponseEntitynos permite asignar un código
de respuesta ( status) y un contenido ( body), para este caso estamos
devolviendo un mensaje en formato JSON. El objetivo del DTO ResponseDTOes que todas
las respuestas del servidor tengan la misma estructura .

@PathVariable-->Se usa cuando quieres identificar un recurso específico.
                Ejemplo: consultar un usuario por su id.

@RequestBody-->Datos en el cuerpo de la petición (body)
               Se usa cuando quieres enviar un objeto completo o varios datos estructurados.
               Siempre que uses un DTO, este viaja en el cuerpo de la petición
----------------
@PostMapping--> crear recursos nuevos
@PutMapping--> Actualizar un recurso completo (reemplazarlo con nuevos datos).
Sin ellas Spring no sabría qué hacer cuando llega una petición a cierta URL.

@RequestParamse usa para enviar parámetros por la url a la petición.
En este caso, estas peticiones son válidas:

No hay obtener todos los usuarios
Controlador de imagenes
Todas las personas se registran al inicio como un usuario y ese usuario se puede
cpnvertir en anfitrion(crear alojamientos)
longitud y latitud, que se muestre un mapa, el de click donde quiere y nosotros tomar los datos
En interface solamente se declaran los metodos, en este caso tenemos la interface
usuarioservice y su implementacion que tiene la logica del negocio
El controlador lo que hace es llamar los metodos del service
YA DEBERIAN ESTAR LOS REST CONTROLLER, DTO
HACER HOST PROFILE, AGREGAR STATUS AL USUARIO NORMAL, SERVICIOS DE LAS RESERVAS, PICINA, PARQUEADERO...
CREAR UN ALOJAMIENTO E IR AGREGANDO SERVICIOS
ID SON LONG
28 dtos